package com.epicstuff.dto;

import lombok.Data;
import lombok.Builder;
import javax.validation.constraints.*;
import javax.validation.Valid;
import java.util.List;

@Data
@Builder
public class LocationUpdateRequest {
    
    @Size(min = 1, max = 200, message = "Name must be between 1 and 200 characters")
    private String name;
    
    @Size(min = 10, max = 2000, message = "Description must be between 10 and 2000 characters")
    private String description;
    
    // // [DONE] Coordinate update (optional)
    @Valid
    private CoordinatesRequest coordinates;
    
    // // [DONE] Boolean flag updates (optional)
    private Boolean isRealPlace;
    private Boolean isMythological;
    private Boolean isModernLocation;
    private Boolean isAccessibleToday;
    private Boolean isUnderwater;
    private Boolean isArchaeological;
    private Boolean isTouristDestination;
    private Boolean hasModernName;
    
    @Size(max = 200, message = "Modern name cannot exceed 200 characters")
    private String modernName;
    
    @Size(max = 200, message = "Ancient name cannot exceed 200 characters")
    private String ancientName;
    
    @Valid
    private GeographicRegionRequest region;
    
    // // [DONE] Array updates (with validation)
    @Size(max = 15, message = "Cannot have more than 15 alternative names")
    private List<@NotBlank @Size(max = 100) String> alternativeNames;
    
    @Size(max = 20, message = "Cannot have more than 20 notable features")
    private List<@NotBlank @Size(max = 150) String> notableFeatures;
    
    @Size(max = 10, message = "Cannot have more than 10 historical periods")
    private List<@NotBlank @Size(max = 100) String> historicalPeriods;
    
    @Size(max = 15, message = "Cannot have more than 15 mythological events")
    private List<@NotBlank @Size(max = 200) String> mythologicalEvents;
    
    @Size(max = 25, message = "Cannot have more than 25 modern landmarks")
    private List<@NotBlank @Size(max = 150) String> modernLandmarks;
    
    @Size(max = 50, message = "Cannot have more than 50 characters")
    private List<@NotNull Long> characterIds;
    
    @Size(max = 100, message = "Cannot have more than 100 events")
    private List<@NotNull Long> eventIds;
    
    @Size(max = 10, message = "Cannot have more than 10 sagas")
    private List<@NotNull Long> sagaIds;
    
    @Valid
    private TravelInfoRequest travelInfo;
    
    @Valid
    private CulturalSignificanceRequest culturalSignificance;
}